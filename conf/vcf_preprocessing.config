// vim: syntax=nextflow

process {
    // withName: 'VALP:VCF_PREPROCESSING:BCFTOOLS_FILTER' {
    //     tag = { "${meta.id}.${meta.type}" }
    //     ext.prefix = { "${meta.id}.${meta.type}.region_filter" }
    //     ext.args = { [
    //         "--mask-file ${meta.conf_regions}",
    //         '--soft-filter LOWCONF',
    //         '--output-type v'
    //     ].join(' ') }
    // }

    // withName: 'VALP:VCF_PREPROCESSING:TABIX_BGZIP' {
    //     ext.prefix = { "${meta.id}.${meta.type}" }
    // }

    // withName: 'VALP:VCF_PREPROCESSING:SNPSIFT_SPLIT' {
    //     tag = { "${meta.id}.${meta.type}" }
    // }

    // withName: 'VALP:VCF_PREPROCESSING:BCFTOOLS_NORM' {
    //     tag = { "${meta.id}.${meta.type}.chrom${meta.chrom}" }
    //     ext.prefix = { "${meta.id}.${meta.type}.${meta.chrom}.norm" }
    //     ext.args = { [
    //         '--output-type z'
    //     ].join(' ') }
    // }

    // withName: 'VALP:VCF_PREPROCESSING:ENSEMBLVEP_VEP' {
    //     tag = { "${meta.id}.${meta.type}.chrom${meta.chrom}" }
    //     ext.prefix = { "${meta.id}.${meta.type}.${meta.chrom}.vep" }
    //     ext.args = { [
    //         '--format vcf',
    //         '--canonical',
    //         '--merged',
    //         '--compress_output bgzip',
    //         '--exclude_predicted',
    //         '--check_existing',
    //         '--force_overwrite',
    //         '--no_progress',
    //         '--offline',
    //         '--vcf',
    //         '--pick',
    //     ].join(' ') }
    // }

    withName: 'VALP:VCF_PREPROCESSING:BCFTOOLS_PLUGINLIFTOVER' {
        tag = { "${meta.id}.${meta.type}" }
        ext.plugin_path = { params.liftover_plugin }
        ext.prefix = { "${meta.id}.${meta.type}" }
        ext.extra = "--drop-tags FORMAT/PL,FORMAT/AO,FORMAT/PL,FORMAT/QA"
    }

    withName: 'VALP:VCF_PREPROCESSING:BCFTOOLS_SORT' {
        tag = { "${meta.id}.${meta.type}" }
        ext.prefix = { "${meta.id}.${meta.type}.sorted" }
        ext.args = "--output-type z"
    }
}
